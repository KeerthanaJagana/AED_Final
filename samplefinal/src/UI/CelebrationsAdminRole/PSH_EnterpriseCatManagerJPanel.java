/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.CelebrationsAdminRole;

import Model.PSH_Business;
import Model.PSH_EnterCatag_Celebration;
import Model.PSH_EnterCatag_Hotel;
import Model.PSH_EnterCatag_Restaurant;
import Model.PSH_EnterCatag_Theatre;
import Model.PSH_EnterpriseCatalogDirectory;
import Model.PSH_Manager;
import Model.PSH_location;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.Validation;

/**
 *
 * @author keerthanajagana
 */
public class PSH_EnterpriseCatManagerJPanel extends javax.swing.JPanel {

    private PSH_Business enterpriseAdmin;
    private Runnable callMethod;

    
    /**
     * Creates new form PSH_EnterpriseCatManagerJPanel
     */
    public PSH_EnterpriseCatManagerJPanel(PSH_Business enterpriseAdmin,Runnable callMethod) {
        initComponents();
        this.enterpriseAdmin=enterpriseAdmin;
        this.callMethod=callMethod;
        populateTable();
        for (PSH_location location : enterpriseAdmin.getListOfLocation()) {      //populate items in location combobox
            cmbLocation.addItem(location.getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        lblBCSupr = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBusinessCatalogue = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbLocation = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cmbBCName = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        passwordField = new javax.swing.JTextField();
        txtSuprName = new javax.swing.JTextField();
        cmbBCType = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        backButton.setText("<==BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 23, -1, -1));

        lblBCSupr.setFont(new java.awt.Font("Baskerville Old Face", 3, 36)); // NOI18N
        lblBCSupr.setText("BUSINESS CATALOGUE SUPERVISOR");
        add(lblBCSupr, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 75, 695, -1));

        tblBusinessCatalogue.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        tblBusinessCatalogue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LOCATION NAME", "BUSINESS CATALOGUE TYPE", "BUSINESS CATALOGUE NAME", "NAME", "USERNAME", "PASSWORD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBusinessCatalogue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBusinessCatalogueMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBusinessCatalogue);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 136, 893, 186));

        btnAdd.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 328, 121, 38));

        btnUpdate.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(424, 328, -1, 38));

        btnDelete.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(665, 328, -1, 39));

        jLabel2.setText("LOCATION:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 385, 119, -1));

        cmbLocation.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cmbLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a Location" }));
        cmbLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLocationActionPerformed(evt);
            }
        });
        add(cmbLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, 194, -1));

        jLabel7.setText("Enterprise Catalog name:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, 180, -1));

        cmbBCName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cmbBCName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecte name of enterprise" }));
        add(cmbBCName, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 450, 194, -1));

        jLabel4.setText("USERNAME:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 520, 80, -1));

        usernameField.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(usernameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 520, 170, -1));

        jLabel5.setText("PASSWORD:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 520, 120, -1));

        jLabel3.setText("SUPERVISOR NAME:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(516, 446, 140, -1));

        passwordField.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 510, 194, -1));

        txtSuprName.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        txtSuprName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSuprNameActionPerformed(evt);
            }
        });
        add(txtSuprName, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 440, 194, -1));

        cmbBCType.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cmbBCType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select a Business Catalogue", "Theatre", "Restaurant", "Hotel", "Celebration" }));
        cmbBCType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBCTypeActionPerformed(evt);
            }
        });
        add(cmbBCType, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 380, 194, -1));

        jLabel1.setText("BUSINESS CATALOGUE:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(516, 385, 150, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        callMethod.run();
    }//GEN-LAST:event_backButtonActionPerformed

    private void tblBusinessCatalogueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBusinessCatalogueMouseClicked
        DefaultTableModel model = (DefaultTableModel) tblBusinessCatalogue.getModel();
        if (tblBusinessCatalogue.getSelectedRowCount() != 1) {
            return;
        }

        String locationName = model.getValueAt(tblBusinessCatalogue.getSelectedRow(), 0).toString();

        String eType = model.getValueAt(tblBusinessCatalogue.getSelectedRow(), 1).toString();
        String eName = model.getValueAt(tblBusinessCatalogue.getSelectedRow(), 2).toString();

        String managerName = model.getValueAt(tblBusinessCatalogue.getSelectedRow(), 3).toString();
        String managerUserName = model.getValueAt(tblBusinessCatalogue.getSelectedRow(), 4).toString();
        String managerPassword = model.getValueAt(tblBusinessCatalogue.getSelectedRow(), 5).toString();

        txtSuprName.setText(managerName);
        usernameField.setText(managerUserName);
        passwordField.setText(managerPassword);

        cmbLocation.setSelectedItem(locationName);
        cmbBCName.setSelectedItem(eName);
        cmbBCType.setSelectedItem(eType);
    }//GEN-LAST:event_tblBusinessCatalogueMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblBusinessCatalogue.getModel();
        Object row[] = new Object[10];
        String name = txtSuprName.getText();
        String userName = usernameField.getText();
        String password = passwordField.getText();
        String locationName = cmbLocation.getSelectedItem().toString();
        String enterpriseType1 = cmbBCType.getSelectedItem().toString();   //type of enterprises eg:healthclub
        String enterpriseName1 = cmbBCName.getSelectedItem().toString();

        if (!Validation.validateName(this, name) || !Validation.validateUserName(this, userName)
            || !Validation.validatePassword(this, password)) {
            return;
        }

        if (!enterpriseAdmin.userExistsInSystem(userName)) {
            PSH_location location = enterpriseAdmin.findServiceLocation(locationName);  //finiding location
            PSH_EnterpriseCatalogDirectory businessCatelogDirectory = location.getEnterpriseCatalogDirectory();
            if (enterpriseType1.equals("Theatre") && businessCatelogDirectory != null) {
                PSH_EnterCatag_Theatre theatreName1 = businessCatelogDirectory.findTheatre(enterpriseName1);
                theatreName1.addManager(name, userName, password);
                enterpriseAdmin.getUserNamePasswordMap();
                enterpriseAdmin.addUser(userName, password, "Theatre");
                row[0] = locationName;
                row[1] = "Theatre";
                row[2] = enterpriseName1;
                row[3] = name;
                row[4] = userName;
                row[5] = password;
                model.addRow(row);
                return;
            } else if (enterpriseType1.equals("Celebration") && businessCatelogDirectory != null) {
                PSH_EnterCatag_Celebration celeb1 = businessCatelogDirectory.findCelebration(enterpriseName1);
                celeb1.addManager(name, userName, password);
                enterpriseAdmin.addUser(userName, password, "Celebration");
                row[0] = locationName;
                row[1] = "Celebration";
                row[2] = enterpriseName1;
                row[3] = name;
                row[4] = userName;
                row[5] = password;
                model.addRow(row);
            } else if (enterpriseType1.equals("Restaurant") && businessCatelogDirectory != null) {
                PSH_EnterCatag_Restaurant res1 = businessCatelogDirectory.findRestaurant(enterpriseName1);
                res1.addManager(userName, userName, password);
                enterpriseAdmin.addUser(userName, password, "Restaurant");

                row[0] = locationName;
                row[1] = "Restaurant";
                row[2] = enterpriseName1;
                row[3] = name;
                row[4] = userName;
                row[5] = password;
                model.addRow(row);
            } else if (enterpriseType1.equals("Hotel") && businessCatelogDirectory != null) {
                PSH_EnterCatag_Hotel hotel1 = businessCatelogDirectory.findHotel(enterpriseName1);
                hotel1.addManager(name, userName, password);
                enterpriseAdmin.addUser(userName, password, "Hotel");
                row[0] = locationName;
                row[1] = "Hotel";
                row[2] = enterpriseName1;
                row[3] = name;
                row[4] = userName;
                row[5] = password;
                model.addRow(row);
            }
        } else {
            JOptionPane.showMessageDialog(this, String.format("This username '%s' already exists", userName));
        }
        JOptionPane.showMessageDialog(this, "Manager added successfully");
        txtSuprName.setText("");
        usernameField.setText("");
        passwordField.setText("");
        cmbBCName.setSelectedIndex(0);
        cmbBCType.setSelectedIndex(0);
        cmbLocation.setSelectedIndex(0);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        if (tblBusinessCatalogue.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
        }

        String locationkName = cmbLocation.getSelectedItem().toString();
        String enterpriseType1 = cmbBCType.getSelectedItem().toString();
        String enterpriseName1 = cmbBCName.getSelectedItem().toString();
        String managerUserName = usernameField.getText();

        String password = passwordField.getText();
        String name = txtSuprName.getText();

        PSH_location location = enterpriseAdmin.findServiceLocation(locationkName);  //finiding location
        PSH_EnterpriseCatalogDirectory enterpriseCatalogueDirectory = location.getEnterpriseCatalogDirectory();

        if (enterpriseType1.equals("Theatre")) {
            PSH_EnterCatag_Theatre theatreName1 = enterpriseCatalogueDirectory.findTheatre(enterpriseName1);
            for (PSH_Manager ent : theatreName1.getListOfManager()) {
                if (ent.getUsername().equals(managerUserName)) {

                    ent.setName(name);
                    ent.setPassword(password);

                    enterpriseAdmin.updateUser(managerUserName, password);
                    populateTable();
                    JOptionPane.showMessageDialog(this, " Updated successfully ");
                    return;
                }
            }
        } else if (enterpriseType1.equals("Celebration")) {
            PSH_EnterCatag_Celebration celeb1 = enterpriseCatalogueDirectory.findCelebration(enterpriseName1);
            for (PSH_Manager man : celeb1.getListOfManager()) {
                if (man.getUsername().equals(managerUserName)) {

                    man.setName(name);
                    man.setPassword(password);

                    enterpriseAdmin.updateUser(managerUserName, password);
                    populateTable();
                    JOptionPane.showMessageDialog(this, " Updated successfully ");
                    return;
                }
            }
        } else if (enterpriseType1.equals("Hotel")) {
            PSH_EnterCatag_Hotel hotel = enterpriseCatalogueDirectory.findHotel(enterpriseName1);
            for (PSH_Manager man : hotel.getListOfManager()) {
                if (man.getUsername().equals(managerUserName)) {

                    man.setName(name);
                    man.setPassword(password);

                    enterpriseAdmin.updateUser(managerUserName, password);
                    populateTable();
                    JOptionPane.showMessageDialog(this, " Updated successfully ");
                    return;
                }
            }
        } else if (enterpriseType1.equals("Restaurant")) {
            PSH_EnterCatag_Restaurant res = enterpriseCatalogueDirectory.findRestaurant(enterpriseName1);
            for (PSH_Manager man : res.getListOfManager()) {
                if (man.getUsername().equals(managerUserName)) {
                    man.setName(name);
                    man.setPassword(password);

                    enterpriseAdmin.updateUser(managerUserName, password);

                    populateTable();
                    JOptionPane.showMessageDialog(this, "Updated successfully ");
                    return;
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Invalid enterprise [" + enterpriseType1 + "]");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRowIndex = tblBusinessCatalogue.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblBusinessCatalogue.getModel();
        String locationName = (String) model.getValueAt(selectedRowIndex, 0);
        String enterpriseType = (String) model.getValueAt(selectedRowIndex, 1);
        String enterpriseName = (String) model.getValueAt(selectedRowIndex, 2);
        String selectedUser = (String) model.getValueAt(selectedRowIndex, 4);
        PSH_location location = enterpriseAdmin.findServiceLocation(locationName);
        PSH_EnterpriseCatalogDirectory businessCatalogueDirectory = location.getEnterpriseCatalogDirectory();
        if (enterpriseType.equals("Celebration")) {
            for (PSH_EnterCatag_Celebration celeb : businessCatalogueDirectory.getListOfCelebrations()) {
                for (PSH_Manager mgr : celeb.getListOfManager()) {
                    if (mgr.getName().equals(selectedUser)) {
                        celeb.deleteManager(mgr);
                        JOptionPane.showMessageDialog(this, "Deleted successfully");
                        populateTable();
                    }
                }
            }
        } else if (enterpriseType.equals("Restaurant")) {
            for (PSH_EnterCatag_Restaurant cat : businessCatalogueDirectory.getListOfRestaurants()) {
                for (PSH_Manager mgr : cat.getListOfManager()) {
                    if (mgr.getName().equals(selectedUser)) {
                        cat.deleteManager(mgr);
                        JOptionPane.showMessageDialog(this, "Deleted successfully");
                        populateTable();
                    }
                }
            }
        } else if (enterpriseType.equals("Hotel")) {
            for (PSH_EnterCatag_Hotel resort : businessCatalogueDirectory.getListOfHotels()) {
                for (PSH_Manager mgr : resort.getListOfManager()) {
                    if (mgr.getName().equals(selectedUser)) {
                        resort.deleteManager(mgr);
                        JOptionPane.showMessageDialog(this, "Deleted successfully");
                        populateTable();
                    }
                }
            }
        }
        else if (enterpriseType.equals("Theatre")) {
            for (PSH_EnterCatag_Theatre ent : businessCatalogueDirectory.getListOfTheatre()) {
                for (PSH_Manager mgr : ent.getListOfManager()) {
                    if (mgr.getName().equals(selectedUser)) {
                        ent.deleteManager(mgr);
                        JOptionPane.showMessageDialog(this, "Deleted successfully");
                        populateTable();
                    }
                }
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cmbLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLocationActionPerformed

    }//GEN-LAST:event_cmbLocationActionPerformed

    private void txtSuprNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSuprNameActionPerformed

    }//GEN-LAST:event_txtSuprNameActionPerformed

    private void cmbBCTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBCTypeActionPerformed
        cmbBCName.removeAllItems();
        String locationName = cmbLocation.getSelectedItem().toString();
        System.out.println(locationName);
        PSH_location location = enterpriseAdmin.findServiceLocation(locationName);
        System.out.println(location); 
        PSH_EnterpriseCatalogDirectory enterpriseCatalogueDirectory = location.getEnterpriseCatalogDirectory();
        String enterpriseType1 = cmbBCType.getSelectedItem().toString();
        if (enterpriseType1.equals("Restaurant")) {
            for (PSH_EnterCatag_Restaurant restaurant : enterpriseCatalogueDirectory.getListOfRestaurants()) {
                cmbBCName.addItem(restaurant.getName());
            }
        } else if (enterpriseType1.equals("Theatre")) {
            for (PSH_EnterCatag_Theatre event : enterpriseCatalogueDirectory.getListOfTheatre()) {
                cmbBCName.addItem(event.getName());
            }
        } else if (enterpriseType1.equals("Celebration")) {
            for (PSH_EnterCatag_Celebration cat : enterpriseCatalogueDirectory.getListOfCelebrations()) {
                cmbBCName.addItem(cat.getName());
            }
        } else if (enterpriseType1.equals("Hotel")) {
            for (PSH_EnterCatag_Hotel res : enterpriseCatalogueDirectory.getListOfHotels()) {
                cmbBCName.addItem(res.getName());
            }
        } else {
            return;
        }
    }//GEN-LAST:event_cmbBCTypeActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblBusinessCatalogue.getModel();
        model.setRowCount(0);
        Object row[] = new Object[10];
        for (PSH_location location : enterpriseAdmin.getListOfLocation()) {        //populate location
            row[0] = location.getName();
            PSH_EnterpriseCatalogDirectory enterpriseCatalogueDirectory = location.getEnterpriseCatalogDirectory();  //populate enterpirse name
            for (PSH_EnterCatag_Celebration celeb : enterpriseCatalogueDirectory.getListOfCelebrations()) {   //poplulate events enterprise
                row[1] = "Celebration";
                row[2] = celeb.getName();
                for (PSH_Manager supervisor : celeb.getListOfManager()) {
                    row[0] = location.getName();
                    row[1] = "Celebration";
                    row[2] = celeb.getName();
                    row[3] = supervisor.getName();
                    row[4] = supervisor.getUsername();
                    row[5] = supervisor.getPassword();
                    model.addRow(row);
                }
            }
            for (PSH_EnterCatag_Restaurant cat : enterpriseCatalogueDirectory.getListOfRestaurants()) {   //poplulate restauarant enterprise
                row[1] = "Restaurant";
                row[2] = cat.getName();
                for (PSH_Manager supervisor : cat.getListOfManager()) {
                    row[0] = location.getName();
                    row[1] = "Restaurant";
                    row[2] = cat.getName();
                    row[3] = supervisor.getName();
                    row[4] = supervisor.getUsername();
                    row[5] = supervisor.getPassword();
                    model.addRow(row);
                }
            }
            for (PSH_EnterCatag_Hotel resort : enterpriseCatalogueDirectory.getListOfHotels()) {   //poplulate ent enterprise
                row[1] = "Hotel";
                row[2] = resort.getName();
                for (PSH_Manager supervisor : resort.getListOfManager()) {
                    row[0] = location.getName();
                    row[1] = "Hotel";
                    row[2] = resort.getName();
                    row[3] = supervisor.getName();
                    row[4] = supervisor.getUsername();
                    row[5] = supervisor.getPassword();
                    model.addRow(row);
                }
            }
            for (PSH_EnterCatag_Theatre entertainment : enterpriseCatalogueDirectory.getListOfTheatre()) {   //poplulate ent enterprise
                row[1] = "Theatre";
                row[2] = entertainment.getName();
                for (PSH_Manager supervisor : entertainment.getListOfManager()) {
                    row[0] = location.getName();
                    row[1] = "Theatre";
                    row[2] = entertainment.getName();
                    row[3] = supervisor.getName();
                    row[4] = supervisor.getUsername();
                    row[5] = supervisor.getPassword();
                    model.addRow(row);
                }
            }

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbBCName;
    private javax.swing.JComboBox<String> cmbBCType;
    private javax.swing.JComboBox<String> cmbLocation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBCSupr;
    private javax.swing.JTextField passwordField;
    private javax.swing.JTable tblBusinessCatalogue;
    private javax.swing.JTextField txtSuprName;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
