/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.CustomerRole;

import Model.PSH_Business;
import Model.PSH_Celebration_Anniversary.AnniversaryType;
import Model.PSH_Celebration_Bday.BirthdayPartyType;
import Model.PSH_Celebration_Wedding.WeddingType;
import Model.PSH_EnterCatag_Celebration;
import Model.PSH_RoomBooking;
import PSH_Model.EnterpriseServices.PSH_EnterCatag_CelebrationService;
import java.util.Date;
import java.util.function.Consumer;
import javax.swing.JOptionPane;
import main.DateUtilities;

/**
 *
 * @author keerthanajagana
 */
public class PSH_ServiceBookCelebJPanel extends javax.swing.JPanel {

    private PSH_Business systems;
    private Consumer<PSH_RoomBooking> callOnCreateMethod1;
    private String username;
    private PSH_RoomBooking booking;
    /**
     * Creates new form PSH_ServiceBookCelebJPanel
     */
    public PSH_ServiceBookCelebJPanel(PSH_Business systems, Consumer<PSH_RoomBooking> callOnCreateMethod1, String username, PSH_RoomBooking booking) {
        initComponents();
        this.systems = systems;
        this.callOnCreateMethod1 = callOnCreateMethod1;
        this.username = username;
        this.booking = booking;

        orgComboBox.addItem(null);
        for (PSH_EnterCatag_Celebration eventOrg : booking.getServiceLocation().getEnterpriseCatalogDirectory().getListOfCelebrations()) {
            orgComboBox.addItem(eventOrg);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        lblbookservices = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dateField = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        orgComboBox = new javax.swing.JComboBox();
        radioWedding = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        cmbWedding = new javax.swing.JComboBox();
        radioBirthdayParty = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        cmbBirthdayParty = new javax.swing.JComboBox();
        radioMeeting = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        cmbMeeting = new javax.swing.JComboBox();
        totalPrice = new javax.swing.JButton();
        priceField = new javax.swing.JTextField();
        bookEventBtn = new javax.swing.JButton();

        backBtn.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        backBtn.setText("<==BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        lblbookservices.setFont(new java.awt.Font("Baskerville Old Face", 3, 36)); // NOI18N
        lblbookservices.setText("BOOK EVENTS");

        jLabel2.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        jLabel2.setText("DATE ");

        jLabel4.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        jLabel4.setText("CELEBRATION");

        radioWedding.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        radioWedding.setText("WEDDING");
        radioWedding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioWeddingActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        jLabel5.setText("TYPE OF PACKAGE ");

        cmbWedding.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        radioBirthdayParty.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        radioBirthdayParty.setText("BIRTHDAY PARTY");
        radioBirthdayParty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBirthdayPartyActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        jLabel1.setText("TYPE OF PACKAGE");

        cmbBirthdayParty.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        cmbBirthdayParty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBirthdayPartyActionPerformed(evt);
            }
        });

        radioMeeting.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        radioMeeting.setText("MEETINGS");
        radioMeeting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMeetingActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        jLabel6.setText("TYPE OF PACKAGE");

        cmbMeeting.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N

        totalPrice.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        totalPrice.setText("TOTAL PRICE");
        totalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPriceActionPerformed(evt);
            }
        });

        bookEventBtn.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        bookEventBtn.setText("BOOK EVENT");
        bookEventBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookEventBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bookEventBtn)
                .addGap(385, 385, 385))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(backBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(lblbookservices, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(radioBirthdayParty)
                            .addComponent(radioWedding)
                            .addComponent(radioMeeting, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orgComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbWedding, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbBirthdayParty, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbMeeting, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(totalPrice)
                        .addGap(80, 80, 80)
                        .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(backBtn)
                .addGap(18, 18, 18)
                .addComponent(lblbookservices)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(orgComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radioWedding)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbWedding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(radioBirthdayParty)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbBirthdayParty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(radioMeeting)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbMeeting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(84, 84, 84))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalPrice))))
                .addGap(18, 18, 18)
                .addComponent(bookEventBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        callOnCreateMethod1.accept(booking);
    }//GEN-LAST:event_backBtnActionPerformed

    private void radioWeddingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioWeddingActionPerformed
        if (radioWedding.isSelected()) {
            cmbWedding.removeAllItems();
            for (WeddingType wed : WeddingType.values()) {
                cmbWedding.addItem(wed);
            }
        }
    }//GEN-LAST:event_radioWeddingActionPerformed

    private void radioBirthdayPartyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBirthdayPartyActionPerformed
        if (radioBirthdayParty.isSelected()) {
            cmbBirthdayParty.removeAllItems();
            for (BirthdayPartyType catering : BirthdayPartyType.values()) {
                cmbBirthdayParty.addItem(catering);
            }

        }
    }//GEN-LAST:event_radioBirthdayPartyActionPerformed

    private void cmbBirthdayPartyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBirthdayPartyActionPerformed

    }//GEN-LAST:event_cmbBirthdayPartyActionPerformed

    private void radioMeetingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMeetingActionPerformed
        if (radioMeeting.isSelected()) {
            cmbMeeting.removeAllItems();
            for (AnniversaryType meet : AnniversaryType.values()) {
                cmbMeeting.addItem(meet);
            }
        }
    }//GEN-LAST:event_radioMeetingActionPerformed

    private void totalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPriceActionPerformed

        PSH_EnterCatag_Celebration businessEvent = (PSH_EnterCatag_Celebration) orgComboBox.getSelectedItem();

        if (businessEvent == null) {
            JOptionPane.showMessageDialog(this, "Please select a Business Event organization from the dropdown.");
            return;
        }
        boolean photoRadioBtnSelected = radioWedding.isSelected();
        boolean decorRadioBtnSelected = radioMeeting.isSelected();
        boolean cateringRadioBtnSelected = radioBirthdayParty.isSelected();
        Date date = DateUtilities.formatDate(dateField.getDate());

        int price = 0;
        PSH_EnterCatag_CelebrationService service = new PSH_EnterCatag_CelebrationService(businessEvent, date);
        if (photoRadioBtnSelected) {
            WeddingType photography = (WeddingType) cmbWedding.getSelectedItem();
            service.addService(PSH_EnterCatag_CelebrationService.CelebrationServiceType.WEDDING, photography.getRate());
            price += photography.getRate();
        }

        if (decorRadioBtnSelected) {
            AnniversaryType decor = (AnniversaryType) cmbMeeting.getSelectedItem();
            service.addService(PSH_EnterCatag_CelebrationService.CelebrationServiceType.ANNIVERSARY, decor.getRate());
            price += decor.getRate();
        }

        if (cateringRadioBtnSelected) {
            BirthdayPartyType catering = (BirthdayPartyType) cmbBirthdayParty.getSelectedItem();
            service.addService(PSH_EnterCatag_CelebrationService.CelebrationServiceType.BIRTHDAYPARTY, catering.getRate());
            price += catering.getRate();
        }

        priceField.setText(String.valueOf(price));
    }//GEN-LAST:event_totalPriceActionPerformed

    private void bookEventBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookEventBtnActionPerformed

        PSH_EnterCatag_Celebration businessEvent = (PSH_EnterCatag_Celebration) orgComboBox.getSelectedItem();

        if (businessEvent == null) {
            JOptionPane.showMessageDialog(this, "Please select a Business Event organization from the dropdown.");
            return;
        }

        Date date = DateUtilities.formatDate(dateField.getDate());
        Date checkin = booking.getCheckin();
        Date checkout = booking.getCheckout();
        if (date.compareTo(checkin) < 0 || date.compareTo(checkout) > 0) {
            JOptionPane.showMessageDialog(this, "Selected date should be within check-in date (" + checkin
                + ") and checkout date (" + checkout + ")");
            return;
        }

        boolean weddingRadioBtnSelected = radioWedding.isSelected();
        boolean MeetingRadioBtnSelected = radioMeeting.isSelected();
        boolean birthdayPartyRadioBtnSelected = radioBirthdayParty.isSelected();

        if (!weddingRadioBtnSelected && !MeetingRadioBtnSelected && !birthdayPartyRadioBtnSelected) {
            JOptionPane.showMessageDialog(this, "Please select at least one service for Business Event.");
            return;
        }

        int price = 0;
        PSH_EnterCatag_CelebrationService service = new PSH_EnterCatag_CelebrationService(businessEvent, date);
        if (weddingRadioBtnSelected) {
            WeddingType weddin = (WeddingType) cmbWedding.getSelectedItem();
            service.addService(PSH_EnterCatag_CelebrationService.CelebrationServiceType.WEDDING, weddin.getRate());
            price += weddin.getRate();
        }

        if (MeetingRadioBtnSelected) {
            AnniversaryType meet = (AnniversaryType) cmbMeeting.getSelectedItem();
            service.addService(PSH_EnterCatag_CelebrationService.CelebrationServiceType.ANNIVERSARY, meet.getRate());
            price += meet.getRate();
        }

        if (birthdayPartyRadioBtnSelected) {
            BirthdayPartyType birthdayParty = (BirthdayPartyType) cmbBirthdayParty.getSelectedItem();
            service.addService(PSH_EnterCatag_CelebrationService.CelebrationServiceType.BIRTHDAYPARTY, birthdayParty.getRate());
            price += birthdayParty.getRate();
        }

        priceField.setText(String.valueOf(price));
        booking.addService(service);

        JOptionPane.showMessageDialog(this, "Business event service added successfully.");
        callOnCreateMethod1.accept(booking);
    }//GEN-LAST:event_bookEventBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton bookEventBtn;
    private javax.swing.JComboBox cmbBirthdayParty;
    private javax.swing.JComboBox cmbMeeting;
    private javax.swing.JComboBox cmbWedding;
    private com.toedter.calendar.JDateChooser dateField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblbookservices;
    private javax.swing.JComboBox orgComboBox;
    private javax.swing.JTextField priceField;
    private javax.swing.JRadioButton radioBirthdayParty;
    private javax.swing.JRadioButton radioMeeting;
    private javax.swing.JRadioButton radioWedding;
    private javax.swing.JButton totalPrice;
    // End of variables declaration//GEN-END:variables
}
